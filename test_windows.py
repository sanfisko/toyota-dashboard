#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–∫–Ω–∞–º–∏ Toyota
"""

import asyncio
import sys
from pytoyoda import MyT
from pytoyoda.models.endpoints.command import CommandType

async def test_windows_control():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–∫–Ω–∞–º–∏."""
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
    username = "sanfisko@gmail.com"
    password = "$@nfiSK3"
    vin = "JTPABACA90R004975"
    
    print("üöó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–∫–Ω–∞–º–∏ Toyota")
    print(f"VIN: {vin}")
    print("-" * 50)
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
        print("üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Toyota Connected Services...")
        client = MyT(username=username, password=password)
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
        print("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π...")
        vehicles = await client.get_vehicles()
        
        if not vehicles:
            print("‚ùå –ê–≤—Ç–æ–º–æ–±–∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
            
        # –ù–∞–π—Ç–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å –ø–æ VIN
        target_vehicle = None
        for vehicle in vehicles:
            if vehicle.vin == vin:
                target_vehicle = vehicle
                break
                
        if not target_vehicle:
            print(f"‚ùå –ê–≤—Ç–æ–º–æ–±–∏–ª—å —Å VIN {vin} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏:")
            for vehicle in vehicles:
                print(f"  - {vehicle.vin} ({vehicle.alias})")
            return
            
        print(f"‚úÖ –ê–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–∞–π–¥–µ–Ω: {target_vehicle.alias} ({target_vehicle.vin})")
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–∫–Ω–∞–º–∏
        print("\nü™ü –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–∫–Ω–∞–º–∏...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        available_commands = [
            CommandType.WINDOW_ON,   # power-window-on
            CommandType.WINDOW_OFF,  # power-window-off
        ]
        
        for command in available_commands:
            print(f"\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã: {command.value}")
            try:
                result = await target_vehicle.post_command(command)
                print(f"‚úÖ –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
                print(f"   –°—Ç–∞—Ç—É—Å: {result}")
                
                # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∫–æ–º–∞–Ω–¥–∞–º–∏
                await asyncio.sleep(2)
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã {command.value}: {e}")
        
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
        
    return True

if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–∫–Ω–∞–º–∏...")
    success = asyncio.run(test_windows_control())
    
    if success:
        print("\n‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–∫–Ω–∞–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        sys.exit(0)
    else:
        print("\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å")
        sys.exit(1)