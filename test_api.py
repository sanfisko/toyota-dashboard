#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API endpoints
"""

import asyncio
import json
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

async def test_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints ===")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        from app import app
        from fastapi.testclient import TestClient
        
        client = TestClient(app)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—É—Ç–µ–π
        print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /api/system/paths")
        response = client.get("/api/system/paths")
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—É—Ç—è—Ö")
            
            # –í—ã–≤–æ–¥–∏–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            if 'paths' in data:
                print("\nüìÅ –û—Å–Ω–æ–≤–Ω—ã–µ –ø—É—Ç–∏:")
                for key, value in data['paths'].items():
                    print(f"  {key}: {value}")
            
            if 'config_file_status' in data:
                config_status = data['config_file_status']
                print(f"\n‚öôÔ∏è –°—Ç–∞—Ç—É—Å —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
                print(f"  –ü—É—Ç—å: {config_status['path']}")
                print(f"  –°—É—â–µ—Å—Ç–≤—É–µ—Ç: {'‚úÖ' if config_status['exists'] else '‚ùå'}")
                print(f"  –ß–∏—Ç–∞–µ–º—ã–π: {'‚úÖ' if config_status['readable'] else '‚ùå'}")
                print(f"  –ó–∞–ø–∏—Å—ã–≤–∞–µ–º—ã–π: {'‚úÖ' if config_status['writable'] else '‚ùå'}")
            
            if 'alternative_paths' in data:
                print(f"\nüìÇ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø—É—Ç–∏:")
                for alt in data['alternative_paths']:
                    print(f"  {alt['path']}")
                    print(f"    –§–∞–π–ª: {'‚úÖ' if alt['exists'] else '‚ùå'}")
                    print(f"    –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {'‚úÖ' if alt['dir_exists'] else '‚ùå'}")
                    print(f"    –ó–∞–ø–∏—Å—ã–≤–∞–µ–º–∞—è: {'‚úÖ' if alt['dir_writable'] else '‚ùå'}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(response.text)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        print(f"\nüíæ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        test_config = {
            "username": "test@example.com",
            "password": "test_password",
            "vin": "TEST123456789",
            "region": "europe",
            "port": 2025
        }
        
        response = client.post("/api/save-config", json=test_config)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
                if 'config_path' in result:
                    print(f"  –ü—É—Ç—å: {result['config_path']}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            try:
                error_data = response.json()
                print(f"  –î–µ—Ç–∞–ª–∏: {error_data.get('error', '–ù–µ—Ç –¥–µ—Ç–∞–ª–µ–π')}")
            except:
                print(f"  –û—Ç–≤–µ—Ç: {response.text}")
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    print("\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–∞–≤–µ—Ä—à–µ–Ω–æ ===")

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ FastAPI
    try:
        import fastapi
        from fastapi.testclient import TestClient
        asyncio.run(test_api())
    except ImportError:
        print("‚ùå FastAPI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...")
        os.system("pip install fastapi[all]")
        print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞")